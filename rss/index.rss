<rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:media="http://search.yahoo.com/mrss/" version="2.0"><channel><title>ake.kr</title><description>Thoughts, stories and ideas.</description><link>http://localhost:2368/</link><generator>Ghost 0.9</generator><lastBuildDate>Mon, 08 Aug 2016 08:32:33 GMT</lastBuildDate><atom:link href="http://localhost:2368/rss/" rel="self" type="application/rss+xml"/><ttl>60</ttl><item><title>Github Pages로 Ghost 이용하기 #Intro - 황혼부터 삽질까지</title><description>&lt;p&gt;블로그를 세번이나 갈아엎었다. 내 홈페이지에 자주 방문할 사람이 있을까 싶지만, "이새끼는 뭐하는데 블로그를 자주 갈아엎어?" 라면서 물어볼때를 대비하여 댈만한 이유들은 참 많지만 핵심적인 이유들을 꼽자면&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;XE를 더이상 안쓴다  &lt;/li&gt;
&lt;li&gt;워드프레스가 더이상 마음에 안든다  &lt;/li&gt;
&lt;li&gt;자원도 얼마 안들어가는 블로그인데 코노하에 10달러씩 꼬박꼬박 바치고있는게 배가 아프다&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;이게 핵심적인 요소들이다(3번은 좀 이상하긴 한데, 그렇다고&lt;/p&gt;</description><link>http://localhost:2368/github-pagesro-ghost-iyonghagi-intro/</link><guid isPermaLink="false">83f79b58-98b4-4c19-a088-26192e06149f</guid><dc:creator>Jin Hu, Baek</dc:creator><pubDate>Mon, 08 Aug 2016 07:25:00 GMT</pubDate><content:encoded>&lt;p&gt;블로그를 세번이나 갈아엎었다. 내 홈페이지에 자주 방문할 사람이 있을까 싶지만, "이새끼는 뭐하는데 블로그를 자주 갈아엎어?" 라면서 물어볼때를 대비하여 댈만한 이유들은 참 많지만 핵심적인 이유들을 꼽자면&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;XE를 더이상 안쓴다  &lt;/li&gt;
&lt;li&gt;워드프레스가 더이상 마음에 안든다  &lt;/li&gt;
&lt;li&gt;자원도 얼마 안들어가는 블로그인데 코노하에 10달러씩 꼬박꼬박 바치고있는게 배가 아프다&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;이게 핵심적인 요소들이다(3번은 좀 이상하긴 한데, 그렇다고 하자).
그래서 생각해놓은것이 많은 개발자들이 사용하던 정적페이지 호스팅 블로그. 즉 Jekyll을 이용한 블로그! 이것이 가장 마음에 들었다.&lt;/p&gt;

&lt;p&gt;근데 Jekyll을 쓰자니 이런것들이 걸렸다&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Ruby의 버전을 두번이나 갈아엎어야했고, rvm은 완벽히 작동하지 않았다&lt;/li&gt;
&lt;li&gt;Jekyll의 사용을 하기위해서는 Ruby/Node/Python 즉 세개의 언어가 필요했다.&lt;/li&gt;
&lt;li&gt;메뉴얼이 정말 불친절했다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;그래서 생각해두고있었던것이 바로 &lt;a href="https://ghost.org"&gt;Ghost&lt;/a&gt;, 이 Ghost는 상당히 잘 만들어진 블로그 플랫폼이였고, 오픈소스형태의 사용방식도 있어서 주저말고 Ghost를 사용하기로 선택했다.
무엇보다 대시보드가 깔끔하여 마크다운으로 게시물을 작성하기에도 상당히 편리했고.&lt;/p&gt;

&lt;h2 id=""&gt;환경&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Windows 10 Pro x64 레드스톤 빌드(이른바 1주년 업데이트)&lt;/li&gt;
&lt;li&gt;Windows Bash(Ubuntu base)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=""&gt;시행착오&lt;/h2&gt;

&lt;p&gt;시행착오는 솔직히 한탄에 가깝다. 그러니까 불필요하다 싶으면 &lt;a href="http://localhost:2368/github-pagesro-ghost-iyonghagi-intro/#installstep"&gt;설치과정&lt;/a&gt;으로 넘어가시는걸 적극권장 한다.&lt;/p&gt;

&lt;p&gt;솔직히 설치 처음부터 상당히 애를먹었다. 아무런 문서도 없고, 아무런 사람들의 이야기도 없이 설치한다는게 워낙 고역이다...&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;img src="http://localhost:2368/content/images/2016/08/--1.PNG" alt="멘붕의 현장 1" title=""&gt; &lt;strong&gt;멘붕의 현장&lt;/strong&gt; 1. 노드는 4버전대(LTS)를 지원한다. 6버전대는 지원이 안된다...&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;물론 이것은 &lt;code&gt;package.json&lt;/code&gt;을 뜯어고치면 되는 문제긴 하지만, 솔직히 여기서 맞부닺힐지 몰랐다. 그리고나서 두번째 멘붕이 시작된다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;img src="http://localhost:2368/content/images/2016/08/--2.PNG" alt="uv&lt;em&gt;interface&lt;/em&gt;addresses problem" title=""&gt; &lt;strong&gt;멘붕의 현장&lt;/strong&gt; 2. 윈도우 배쉬쉘에선 ghost를 돌릴때 &lt;code&gt;uv_interface_addresses&lt;/code&gt; 오류로 인하여 정상작동하지 않았다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;이 문제도 '내가 Ghost를 잘못설치했나?'라고 생각했지만, 똑바로 설치한거였고 결국엔 window bash shell 문제임이 깃허브 이슈를 통해 확정되는 순간이였다. &lt;a href="https://github.com/nodejs/node/issues/7150"&gt;Issue&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;그 다음은 ghost를 정적페이지로 바꾸어주는 buster가 문제였다. Wow... Buster 패키지를 설치하려면 Python 설치 -&gt; pip 설치(윈도우 패키지 안엔 포함되어있다) -&gt; buster 설치인데, buster에서 사용하는 &lt;code&gt;lxml&lt;/code&gt; 패키지때문에 막혔다.&lt;/p&gt;

&lt;p&gt;아래는 해결방법이였다.&lt;/p&gt;

&lt;p&gt;일단 설치를 위한 멘붕과정은 는 끝났다. 그리고 또다시 멘붕할것이 남아있다... 그건 초장에서 알아보자..&lt;/p&gt;</content:encoded></item></channel></rss>